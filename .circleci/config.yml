# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:

  Build:
    docker:
      # we don't need the image that contains all the tooling to build the java project
      - image: cimg/openjdk:11.0-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-{{ checksum "pom.xml" }}

      - run:
          name: "build project"
          command: |
            # create the workspace dir
            mkdir -p workspace/all
            mkdir -p workspace/dispatcher
            
            # build
            mvn clean install
            
            # copy the artifacts into a workspace location
            cp -r all/target/*.zip workspace/all
            cp -r dispatcher/target/*.zip workspace/dispatcher

      - persist_to_workspace:
          root: workspace
          paths:
            - all
            - dispatcher

      - save_cache:
          key: maven-{{ checksum "pom.xml" }}
          paths:
            - /home/circleci/.m2/repository/

  RDE-reset:
    docker:
      - image: ghcr.io/andresbott/aem-guides-wknd/ci-image:8f8fc83b9038
        auth:
          username: andresbott
          password: $GH_CONTAINER_RO_EXP_07_24
    steps:
      - checkout
      - run:
          name: "aio-cli login"
          command: .circleci/aio_login.sh
      - run:
          name: "reset the RDE"
          no_output_timeout: 15m
          command: |            
            # execute the reset command
            time aio aem:rde:reset

  RDE-prepare:
    docker:
      - image: ghcr.io/andresbott/aem-guides-wknd/ci-image:8f8fc83b9038
        auth:
          username: andresbott
          password: $GH_CONTAINER_RO_EXP_07_24
    steps:
      - checkout
      - run:
          name: "aio-cli login"
          command: .circleci/aio_login.sh

  RDE-prepare-install:
    docker:
      - image: ghcr.io/andresbott/aem-guides-wknd/ci-image:8f8fc83b9038
        auth:
          username: andresbott
          password: $GH_CONTAINER_RO_EXP_07_24
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: "aio-cli login"
          command: .circleci/aio_login.sh

      - run:
          name: "setup new admin user on RDE"
          command: |
            # Note: repoinit has some limitations with special characters in password, e.g. "+" sign
            .circleci/create-user-osgi-cfg.sh -u "${AEM_USER}" -p "${AEM_PASSWORD}" -q true
            
            aio aem:rde:install -t osgi-config org.apache.sling.jcr.repoinit.RepositoryInitializer~testadmin-user-add.cfg.json
            
            # delete the osgi config, this is fine since the script contained within the config is not reverterd
            aio aem:rde:delete org.apache.sling.jcr.repoinit.RepositoryInitializer~testadmin-user-add          

      - run:
          name: "install project on RDE"
          command: |
            set -e
            ALL_FILE=$(ls /tmp/workspace/all/ | grep zip ) && aio aem:rde:install -t content-package "/tmp/workspace/all/${ALL_FILE}"
            DISP_FILE=$(ls /tmp/workspace/dispatcher/ | grep zip ) && aio aem:rde:install -t dispatcher-config "/tmp/workspace/dispatcher/${DISP_FILE}"


  RDE-ready:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - run:
          name: "Wait until RDE endpoint is ready"
          working_directory: ./.circleci
          command: |
            sleep 10
            ./wait-endpoint.sh "${PUBLISH_URL}"
  

  Custom-functional-tests:
    docker:
      - image: ghcr.io/andresbott/aem-guides-wknd/ci-image:8f8fc83b9038
        auth:
          username: andresbott
          password: $GH_CONTAINER_RO_EXP_07_24
    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-{{ checksum "pom.xml" }}
      - run:
          name: "Run custom functional tests"
          command: |
            cd it.tests 
            mvn clean verify \
            -Plocal \
            -Dit.author.url="${AUTHOR_URL}" \
            -Dit.author.user="${AEM_USER}" \
            -Dit.author.password="${AEM_PASSWORD}" \
            -Dit.publish.url="${PUBLISH_URL}" \
            -Dit.publish.user="${AEM_USER}" \
            -Dit.publish.password="${AEM_PASSWORD}" \
            -Dmaven.javadoc.skip=true \
            -Dmaven.surefire.debug

  Product-tests:
    docker:
      - image: ghcr.io/andresbott/aem-guides-wknd/ci-image:8f8fc83b9038
        auth:
          username: andresbott
          password: $GH_CONTAINER_RO_EXP_07_24
    steps:
      - run:
          name: "Eaas login"
          command: |
            echo "${SERVICE_ACCOUNT_PRIVATE_KEY_B64}" | base64 -d > private.key
            eaas login integration  \
              --organization "${SERVICE_ACCOUNT_ORG_ID}" \
              --clientId "${SERVICE_ACCOUNT_CLIENT_ID}" \
              --secret "${SERVICE_ACCOUNT_CLIENT_SECRET}" \
              --privateKey private.key \
              --accountId "${SERVICE_ACCOUNT_TECH_ACCOUNT_ID}"            
            eaas health
      - run:
          name: "Generate the IT payload"
          command: |         
            eaas task it generate \
            -a "${AUTHOR_URL}" -u testeradmin -p "${AEM_PASSWORD}" \
            -A "${PUBLISH_URL}" -U testeradmin -P "${AEM_PASSWORD}" \
            -m "com.adobe.cq.cloud:com.adobe.cq.cloud.testing.it.smoke:0.19.0"

      - run:
          name: "Run the Product test"
          no_output_timeout: 15m
          command: |
            eaas task it run it-task-payload.json 
            mkdir -p artifacts
            mv *.zip artifacts

      - store_artifacts:
          path: artifacts

  waiter:
    docker:
      - image: cimg/base:2021.04
    steps:
      - run:
          # workaround for running a task at the end, regardless of the previous job result
          # https://discuss.circleci.com/t/workaround-run-jobs-sequentially-regardless-of-the-outcome-of-the-required-jobs/40807
          name: "wait completion"
          command: |
            while [[ $(curl --location --request GET "https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/job" | jq -r '.items[]|select(.name != "waiter")|.status' | grep -c "running") -gt 0 ]]
              do
                sleep 5
              done
      - run: echo "All required jobs have now completed"

  Finalize-RDE-reset:
    docker:
      - image: ghcr.io/andresbott/aem-guides-wknd/ci-image:8f8fc83b9038
        auth:
          username: andresbott
          password: $GH_CONTAINER_RO_EXP_07_24
    steps:
      - checkout
      - run:
          name: "aio-cli login"
          command: .circleci/aio_login.sh
      - run:
          name: "fire and forget: reset the RDE"
          no_output_timeout: 15m
          command: |
            # execute the reset command
            aio aem:rde:reset & 
            sleep 10

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  PR-validation:
    jobs:

      - Build
      - RDE-reset
      - RDE-prepare:
          requires:
            - RDE-reset

      - RDE-prepare-install:
          requires:
            - Build
            - RDE-prepare
      - RDE-ready:
          requires:
            - RDE-prepare-install

      - Custom-functional-tests:
          requires:
            - RDE-ready
      - Product-tests:
          requires:
            - RDE-ready
      - waiter
      - Finalize:
          requires:
            - waiter
